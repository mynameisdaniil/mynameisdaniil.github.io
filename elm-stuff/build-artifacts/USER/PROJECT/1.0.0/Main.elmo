Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Main",
   $Basics = Elm.Basics.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Random = Elm.Random.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Signal$Time = Elm.Signal.Time.make(_elm);
   var shuffle = F2(function (data,
   seed) {
      return function () {
         var randomList = F2(function (len,
         seed) {
            return function () {
               var _ = A2($Random.generate,
               A2($Random.list,
               len,
               A2($Random.$int,0,len)),
               seed);
               var list = function () {
                  switch (_.ctor)
                  {case "_Tuple2": return _._0;}
                  _U.badCase($moduleName,
                  "on line 62, column 26 to 83");
               }();
               return list;
            }();
         });
         var len = $List.length(data);
         return $List.map(function (_v11) {
            return function () {
               switch (_v11.ctor)
               {case "_Tuple2":
                  return _v11._1;}
               _U.badCase($moduleName,
               "on line 66, column 31 to 35");
            }();
         })($List.sortWith(F2(function (_v3,
         _v4) {
            return function () {
               switch (_v4.ctor)
               {case "_Tuple2":
                  return function () {
                       switch (_v3.ctor)
                       {case "_Tuple2":
                          return A2($Basics.compare,
                            _v3._0,
                            _v4._0);}
                       _U.badCase($moduleName,
                       "on line 67, column 43 to 54");
                    }();}
               _U.badCase($moduleName,
               "on line 67, column 43 to 54");
            }();
         }))(A3($List.map2,
         F2(function (i,line) {
            return {ctor: "_Tuple2"
                   ,_0: i
                   ,_1: line};
         }),
         A2(randomList,len,seed),
         data)));
      }();
   });
   var data = _L.fromArray(["Master\'s degree in signal processing"
                           ,"All-time linux user since Ubuntu 8.04"
                           ,"Have expirience in nginx module writing"
                           ,"I have /dev/ops which is recursive link to myself"
                           ,"Have expirience in nodejs native modules writing"
                           ,"Do love syntax of Erlang"
                           ,"Pretty reactive"
                           ,"Very functional"
                           ,"My other CAP is a theorem"
                           ,"I do understand Riak\'s code"
                           ,"I\'ve lost my ability to explain monads"
                           ,"Can\'t decide if I dislike Java more than C++ or vise versa"
                           ,"Wrote this line at 3:43 AM"
                           ,"Wrote several lisp interpreters"
                           ,"I\'ve used Ansible back then before it became mainstream"
                           ,"Containers\' pioneer (and I\'m not talking about Docker)"
                           ,"Can\'t advise you continuous integration server"
                           ,"Engineer"
                           ,"Good guy"]);
   var model = function (time) {
      return A2(shuffle,
      data,
      $Random.initialSeed($Basics.round(time)));
   };
   var view = function (model) {
      return A2($Html.div,
      _L.fromArray([]),
      _L.fromArray([A2($Html.h1,
                   _L.fromArray([]),
                   _L.fromArray([$Html.text("Daniil Sobol")]))
                   ,A2($Html.p,
                   _L.fromArray([]),
                   _L.fromArray([A2($Html.h2,
                                _L.fromArray([]),
                                _L.fromArray([$Html.text("Set of random facts about me:")]))
                                ,$Html.ul(_L.fromArray([]))(A2($List.map,
                                function (line) {
                                   return A2($Html.li,
                                   _L.fromArray([]),
                                   _L.fromArray([$Html.text(line)]));
                                },
                                model))]))
                   ,A2($Html.h6,
                   _L.fromArray([]),
                   _L.fromArray([A2($Html.a,
                   _L.fromArray([$Html$Attributes.href("https://github.com/mynameisdaniil/mynameisdaniil.github.io/blob/master/src/Main.elm")]),
                   _L.fromArray([$Html.text("This site is functional and reactive too")]))]))]));
   };
   var main = A2($Signal._op["<~"],
   view,
   A2($Signal._op["<~"],
   model,
   $Signal$Time.startTime));
   var update = F2(function (action,
   model) {
      return model;
   });
   var NoOp = {ctor: "NoOp"};
   _elm.Main.values = {_op: _op
                      ,NoOp: NoOp
                      ,update: update
                      ,view: view
                      ,data: data
                      ,model: model
                      ,shuffle: shuffle
                      ,main: main};
   return _elm.Main.values;
};